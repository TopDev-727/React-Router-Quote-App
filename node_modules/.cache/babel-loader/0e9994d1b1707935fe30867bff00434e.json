{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\Documents\\\\Udemy-React 2020\\\\React 2021 Update\\\\react-router-dom-2021\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport { Fragment, useEffect } from 'react';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from './../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport getSingleQuote from '../lib/api';\nimport LoadingSpinner from './../components/UI/LoadingSpinner'; // const DUMMY_QUOTES = [\n//   {\n//     id: 'q1',\n//     author: 'Peter',\n//     text: 'Learning is hard, not learning is harder!',\n//   },\n//   {\n//     id: 'q2',\n//     author: 'John',\n//     text: 'Reality leaves a lot to the imagination.',\n//   },\n//   {\n//     id: 'q3',\n//     author: 'George',\n//     text: 'Life goes on within you and without you.',\n//   },\n//   {\n//     id: 'q4',\n//     author: 'Augustinus von Hippo',\n//     text: \"If the wind won't serve, take to the oars!\",\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuotesDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuotesDetail, \"9oA6TaFDNtyzXPIyN8bTJvanQSo=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuotesDetail;\nexport default QuotesDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesDetail\");","map":{"version":3,"sources":["C:/Users/peter/Documents/Udemy-React 2020/React 2021 Update/react-router-dom-2021/src/pages/QuoteDetail.js"],"names":["useParams","Route","Link","useRouteMatch","Fragment","useEffect","Comments","HighlightedQuote","useHttp","getSingleQuote","LoadingSpinner","QuotesDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,mCAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGT,aAAa,EAA3B;AACA,QAAMU,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAcD,MAApB;AAEA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDX,OAAO,CAC/DC,cAD+D,EAE/D,IAF+D,CAAjE;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,EAAcD,OAAd,CAFM,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACxB;AAAA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAGD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,KAAK,CAACU,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5CD;;GAAMX,Y;UACUR,a,EACCH,S,EAI2CQ,O;;;KANtDG,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport { Fragment, useEffect } from 'react';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from './../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport getSingleQuote from '../lib/api';\r\nimport LoadingSpinner from './../components/UI/LoadingSpinner';\r\n\r\n// const DUMMY_QUOTES = [\r\n//   {\r\n//     id: 'q1',\r\n//     author: 'Peter',\r\n//     text: 'Learning is hard, not learning is harder!',\r\n//   },\r\n//   {\r\n//     id: 'q2',\r\n//     author: 'John',\r\n//     text: 'Reality leaves a lot to the imagination.',\r\n//   },\r\n//   {\r\n//     id: 'q3',\r\n//     author: 'George',\r\n//     text: 'Life goes on within you and without you.',\r\n//   },\r\n//   {\r\n//     id: 'q4',\r\n//     author: 'Augustinus von Hippo',\r\n//     text: \"If the wind won't serve, take to the oars!\",\r\n//   },\r\n// ];\r\n\r\nconst QuotesDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    <div className='centered'>\r\n      <LoadingSpinner />\r\n    </div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found.</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default QuotesDetail;\r\n"]},"metadata":{},"sourceType":"module"}